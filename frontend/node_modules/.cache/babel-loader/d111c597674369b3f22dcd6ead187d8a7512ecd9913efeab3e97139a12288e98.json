{"ast":null,"code":"import { USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../types\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config/config\";\nimport { apis } from \"../../config/api\";\nexport const login = data => async dispatch => {\n  try {\n    const res = await axios.post(BASE_URL + apis.login, data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const register = data => async dispatch => {\n  try {\n    const res = await axios.post(BASE_URL + apis.register, data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: res\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const getAuthUser = userId => async dispatch => {\n  try {\n    const res = await axios.post(BASE_URL + apis.get_auth_user + userId);\n  } catch (error) {}\n};","map":{"version":3,"names":["USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","axios","BASE_URL","apis","login","data","dispatch","res","post","type","payload","error","response","register","getAuthUser","userId","get_auth_user"],"sources":["/windows/sourabh 3.0/MernStack-Tour-Management/tour-management/frontend/src/redux/action/auth.js"],"sourcesContent":["import { USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../types\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config/config\";\nimport { apis } from \"../../config/api\";\n\nexport const login = (data) => async (dispatch) => {\n  try {\n    const res = await axios.post(BASE_URL + apis.login, data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\nexport const register = (data) => async (dispatch) => {\n  try {\n    const res = await axios.post(BASE_URL + apis.register, data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: res,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\nexport const getAuthUser = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.post(BASE_URL + apis.get_auth_user + userId);\n  } catch (error) {\n    \n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,qBAAqB,EAAEC,kBAAkB,QAAQ,UAAU;AACzG,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,GAAGC,IAAI,CAACC,KAAK,EAAEC,IAAI,CAAC;IACzDC,QAAQ,CAAC;MACPG,IAAI,EAAEZ,kBAAkB;MACxBa,OAAO,EAAEH,GAAG,CAACF;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPG,IAAI,EAAEX,eAAe;MACrBY,OAAO,EAAEC,KAAK,CAACC;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIR,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,GAAGC,IAAI,CAACU,QAAQ,EAAER,IAAI,CAAC;IAC5DC,QAAQ,CAAC;MACPG,IAAI,EAAEV,qBAAqB;MAC3BW,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPG,IAAI,EAAET,kBAAkB;MACxBU,OAAO,EAAEC,KAAK,CAACC;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAIC,MAAM,IAAK,MAAOT,QAAQ,IAAK;EACzD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,GAAGC,IAAI,CAACa,aAAa,GAAGD,MAAM,CAAC;EACtE,CAAC,CAAC,OAAOJ,KAAK,EAAE,CAEhB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}