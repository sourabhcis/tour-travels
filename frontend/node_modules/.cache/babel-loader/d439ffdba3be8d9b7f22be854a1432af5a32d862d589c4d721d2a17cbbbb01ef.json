{"ast":null,"code":"import { USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../types\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config/config\";\nimport { apis } from \"../../config/api\";\nexport const login = data => async dispatch => {\n  const body = JSON.stringify({\n    email: data.email,\n    password: data.password\n  });\n  try {\n    const res = await axios.post(\"/login\", body);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const register = data => async dispatch => {\n  const res = await axios.post(BASE_URL + apis.register, data);\n  try {\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: res\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: res\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","axios","BASE_URL","apis","login","data","dispatch","body","JSON","stringify","email","password","res","post","type","payload","error","response","register"],"sources":["/windows/sourabh 3.0/MernStack-Tour-Management/tour-management/frontend/src/redux/action/auth.js"],"sourcesContent":["import { USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../types\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../config/config\";\nimport { apis } from \"../../config/api\";\n\nexport const login = (data) => async (dispatch) => {\n  const body = JSON.stringify({\n    email: data.email,\n    password: data.password,\n  });\n\n  try {\n    const res = await axios.post(\"/login\", body);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response,\n    });\n  }\n};\n\nexport const register = (data) => async (dispatch) => {\n  const res = await axios.post(BASE_URL + apis.register, data);\n  try {\n   \n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: res,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: res,\n    });\n  }\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,qBAAqB,EAAEC,kBAAkB,QAAQ,UAAU;AACzG,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACjD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAC1BC,KAAK,EAAEL,IAAI,CAACK,KAAK;IACjBC,QAAQ,EAAEN,IAAI,CAACM;EACjB,CAAC,CAAC;EAEF,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,QAAQ,EAAEN,IAAI,CAAC;IAC5CD,QAAQ,CAAC;MACPQ,IAAI,EAAEjB,kBAAkB;MACxBkB,OAAO,EAAEH,GAAG,CAACP;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPQ,IAAI,EAAEhB,eAAe;MACrBiB,OAAO,EAAEC,KAAK,CAACC;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIb,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACpD,MAAMM,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAACX,QAAQ,GAAGC,IAAI,CAACe,QAAQ,EAAEb,IAAI,CAAC;EAC5D,IAAI;IAEFC,QAAQ,CAAC;MACPQ,IAAI,EAAEf,qBAAqB;MAC3BgB,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPQ,IAAI,EAAEd,kBAAkB;MACxBe,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}